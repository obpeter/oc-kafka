apiVersion: v1
kind: Template
metadata:
  name: kafkanetes-zookeeper-deploy
  annotations:
    description: 3-pod ZooKeeper
    tags: messaging,zookeeper

parameters:
- name: VOLUME_CAPACITY
  description: Persistent volume capacity per pod, e.g. 512Mi, 2Gi
  required: true
  value: 50Gi
- name: OBJECT_NAME_PREFIX
  description: Name prefix for each object created
  required: true
  value: kafkanetes-zookeeper
- name: IMAGESTREAM
  description: Kafkanetes imagestream name
  required: true
  value: 172.30.10.104:5000/explore-example/kafkanetes

objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${OBJECT_NAME_PREFIX}-1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${OBJECT_NAME_PREFIX}-2
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${OBJECT_NAME_PREFIX}-3
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${OBJECT_NAME_PREFIX}-1
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${OBJECT_NAME_PREFIX}-1
    template:
      metadata:
        labels:
          app: ${OBJECT_NAME_PREFIX}
          deploymentconfig: ${OBJECT_NAME_PREFIX}-1
      spec:
        containers:
        - name: kafkanetes
          image: ${IMAGESTREAM}
          command:
          - bin/zookeeper-server-start-multiple.sh
          args:
          - config/zookeeper.properties
          - ${OBJECT_NAME_PREFIX}
          - "1"
          - "3"
          volumeMounts:
          - mountPath: /tmp/zookeeper
            name: zookeeper
          ports:
          - containerPort: 2181
          - containerPort: 2888
          - containerPort: 3888
        volumes:
        - name: zookeeper
          persistentVolumeClaim:
            claimName: ${OBJECT_NAME_PREFIX}-1
        securityContext:
          supplementalGroups:
            - 5555
            - 50035            
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: false
        containerNames:
        - kafkanetes
        from:
          kind: ImageStream
          name: ${IMAGESTREAM}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${OBJECT_NAME_PREFIX}-2
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${OBJECT_NAME_PREFIX}-2
    template:
      metadata:
        labels:
          app: ${OBJECT_NAME_PREFIX}
          deploymentconfig: ${OBJECT_NAME_PREFIX}-2
      spec:
        containers:
        - name: kafkanetes
          image: ${IMAGESTREAM}
          command:
          - bin/zookeeper-server-start-multiple.sh
          args:
          - config/zookeeper.properties
          - ${OBJECT_NAME_PREFIX}
          - "2"
          - "3"
          volumeMounts:
          - mountPath: /tmp/zookeeper
            name: zookeeper
          ports:
          - containerPort: 2181
          - containerPort: 2888
          - containerPort: 3888
        volumes:
        - name: zookeeper
          persistentVolumeClaim:
            claimName: ${OBJECT_NAME_PREFIX}-2
        securityContext:
          supplementalGroups:
            - 5555
            - 50035                     
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: false
        containerNames:
        - kafkanetes
        from:
          kind: ImageStream
          name: ${IMAGESTREAM}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${OBJECT_NAME_PREFIX}-3
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${OBJECT_NAME_PREFIX}-3
    template:
      metadata:
        labels:
          app: ${OBJECT_NAME_PREFIX}
          deploymentconfig: ${OBJECT_NAME_PREFIX}-3
      spec:
        containers:
        - name: kafkanetes
          image: ${IMAGESTREAM}
          command:
          - bin/zookeeper-server-start-multiple.sh
          args:
          - config/zookeeper.properties
          - ${OBJECT_NAME_PREFIX}
          - "3"
          - "3"
          volumeMounts:
          - mountPath: /tmp/zookeeper
            name: zookeeper
          ports:
          - containerPort: 2181
          - containerPort: 2888
          - containerPort: 3888
        volumes:
        - name: zookeeper
          persistentVolumeClaim:
            claimName: ${OBJECT_NAME_PREFIX}-3
        securityContext:
          supplementalGroups:
            - 5555
            - 50035                     
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: false
        containerNames:
        - kafkanetes
        from:
          kind: ImageStream
          name: ${IMAGESTREAM}

- apiVersion: v1
  kind: Service
  metadata:
    name: ${OBJECT_NAME_PREFIX}-1
  spec:
    ports:
    - name: 2181-tcp
      port: 2181
    - name: 2888-tcp
      port: 2888
    - name: 3888-tcp
      port: 3888
    selector:
      deploymentconfig: ${OBJECT_NAME_PREFIX}-1

- apiVersion: v1
  kind: Service
  metadata:
    name: ${OBJECT_NAME_PREFIX}-2
  spec:
    ports:
    - name: 2181-tcp
      port: 2181
    - name: 2888-tcp
      port: 2888
    - name: 3888-tcp
      port: 3888
    selector:
      deploymentconfig: ${OBJECT_NAME_PREFIX}-2

- apiVersion: v1
  kind: Service
  metadata:
    name: ${OBJECT_NAME_PREFIX}-3
  spec:
    ports:
    - name: 2181-tcp
      port: 2181
    - name: 2888-tcp
      port: 2888
    - name: 3888-tcp
      port: 3888
    selector:
      deploymentconfig: ${OBJECT_NAME_PREFIX}-3

- apiVersion: v1
  kind: Service
  metadata:
    name: ${OBJECT_NAME_PREFIX}
  spec:
    ports:
    - name: 2181-tcp
      port: 2181
    - name: 2888-tcp
      port: 2888
    - name: 3888-tcp
      port: 3888
    selector:
      app: ${OBJECT_NAME_PREFIX}
