apiVersion: v1
kind: DeploymentConfig
metadata:
  name: docker-registry
  namespace: default
  selfLink: /oapi/v1/namespaces/default/deploymentconfigs/docker-registry
  uid: bf2a5471-fe9c-11e6-9734-005056112152
  resourceVersion: '1844987'
  generation: 8
  creationTimestamp: '2017-03-01T16:33:05Z'
  labels:
    docker-registry: default
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
  triggers:
    - type: ConfigChange
  replicas: 2
  test: false
  selector:
    docker-registry: default
  template:
    metadata:
      creationTimestamp: null
      labels:
        docker-registry: default
    spec:
      volumes:
        - name: registry-storage
          persistentVolumeClaim:
            claimName: registry-claim
        - name: volume-mvsuu
          secret:
            secretName: registry-certificates
            defaultMode: 420
      containers:
        - name: registry
          image: 'openshift3/ose-docker-registry:v3.4.1.7'
          ports:
            - containerPort: 5000
              protocol: TCP
          env:
            - name: REGISTRY_HTTP_ADDR
              value: ':5000'
            - name: REGISTRY_HTTP_NET
              value: tcp
            - name: REGISTRY_HTTP_SECRET
              value: 5/xKv8NTBSv1Ke6Oky1kCl/WuOCFvTdbeV4OJJ4Ft+A=
            - name: REGISTRY_MIDDLEWARE_REPOSITORY_OPENSHIFT_ENFORCEQUOTA
              value: 'false'
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: /etc/secrets/registry.crt
            - name: REGISTRY_HTTP_TLS_KEY
              value: /etc/secrets/registry.key
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: registry-storage
              mountPath: /registry
            - name: volume-mvsuu
              mountPath: /etc/secrets
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
              scheme: HTTPS
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5000
              scheme: HTTPS
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        region: infra
      serviceAccountName: registry
      serviceAccount: registry
      securityContext: {}
status:
  latestVersion: 2
  observedGeneration: 8
  replicas: 2
  updatedReplicas: 2
  availableReplicas: 2
  details:
    message: config change
    causes:
      - type: ConfigChange
  conditions:
    - type: Progressing
      status: 'True'
      lastTransitionTime: '2017-03-01T16:34:15Z'
      reason: NewReplicationControllerAvailable
      message: Replication controller "docker-registry-2" has completed progressing
    - type: Available
      status: 'True'
      lastTransitionTime: '2017-04-03T11:08:02Z'
      message: Deployment config has minimum availability.
